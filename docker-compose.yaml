services:
  gifted_29_redis:
    image: "redis:alpine"
    container_name: ${GIFTED_29_REDIS}
    ports:
      - "6379:6379"
    networks:
      - gifted_29_local_network

  gifted_29_celery_worker:
    build: .
    container_name: ${GIFTED_29_CELERY_WORKER}
    command: celery -A config worker -l info
    depends_on:
      - gifted_29_redis
      - gifted_29_db
      # - gifted_29_django_app
    networks:
      - gifted_29_local_network
      
  gifted_29_db:
    image: postgres:latest
    env_file: .env
    container_name: ${GIFTED_29_DB_HOST}
    restart: on-failure
    expose:
      - '${GIFTED_29_DB_PORT}:5432'
    ports:
      - "${GIFTED_29_DB_PORT}:5432"
    environment:
      POSTGRES_USER: ${GIFTED_29_DB_USER}
      POSTGRES_PASSWORD: ${GIFTED_29_DB_PASS}
      POSTGRES_DB: ${GIFTED_29_DB_NAME}
    volumes:
      - ${GIFTED_29_DB_VOLUME}:/var/lib/postgresql/data
    networks:
      - gifted_29_local_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -d ${GIFTED_29_DB_NAME} -U ${GIFTED_29_DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  gifted_29_django_app:
    build: .
    container_name: ${GIFTED_29_APP_HOST}
    volumes:
      - ${GIFTED_29_APP_VOLUME}/media:/app/media
      - ${GIFTED_29_APP_VOLUME}/static:/app/static
      - ${GIFTED_29_APP_VOLUME}/config:/app/config
    command: |
      bash -c "
        python manage.py migrate && \
        python manage.py csu && \
        python manage.py team_create && \
        python manage.py runserver 0.0.0.0:8000"
    ports:
      - ${GIFTED_29_APP_PORT}:8000
    restart: always
    depends_on:
      - gifted_29_db
      - gifted_29_redis
      - gifted_29_celery_worker
    networks:
      - gifted_29_local_network
      - default
networks:
  default:
    name: nginx_network
    external: true
  gifted_29_local_network:
    name: gifted_29_network